openapi: 3.0.3
info:
  title: WISdoM OSS - Water Usage Forecasts
  version: "0.1"

components:
  schemas:
    WaterUsage:
      type: object
      properties:
        startYear:
          type: integer
        endYear:
          type: integer
        usageAmounts:
          type: array
          items:
            type: number
    ForecastType:
      type: string
      enum:
        - logarithmic
        - linear
        - polynomial
    ConsumerGroup:
      type: string
      enum:
        - businesses
        - households_and_small_businesses
        - farming_forestry_fishing_industry
        - public_institutions
        - all
      default: all

paths:
  /:
    get:
      summary: Get the communes, counties, consumer tpyes and forecast types available currently
      responses:
        200:
          description: The data is available
          content:
            application/json:
              schema:
                type: object
                properties:
                  communes:
                    description: Name of the communes available for water usage forecast requests
                    type: array
                    items:
                      type: string
                  counties:
                    description: Name of the counties available for water usage requests
                    type: array
                    items:
                      type: string
                  consumerGroups:
                    description: NAmes of the consumer groups available for filtering the complete usage data
                    type: array
                    items:
                      type: string
                  forecastTypes:
                    description: Names of the forecast types available
                    type: array
                    items:
                      type: string

  /{spatialUnit}/{forecastModel}:
    get:
      summary: Run a new Prognosis and get the data of it
      parameters:
        - in: path
          name: spatialUnit
          required: true
          schema:
            type: string
            enum:
              - commune
              - county
        - in: query
          name: district
          required: true
          style: form
          explode: true
          description: District of the spatial Unit for which the forecast should be run
          schema:
            type: string
        - in: path
          name: forecastModel
          required: true
          description: Type of regression model which shall be used
          schema:
            type: string
            enum:
              - logarithmic
              - linear
              - polynomial
        - in: query
          name: consumerGroup
          required: false
          description: Consumer Group for which the forecast is run

          schema:
            $ref: '#/components/schemas/ConsumerGroup'
      responses:
        200:
          description: The forecast was run successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    name:
                      type: string
                      required: true
                      description: The name of the district that was selected
                    consumerGroup:
                      type: string
                      required: true
                    forecastType:
                      type: string
                      required: true
                    forecastEquation:
                      type: string
                      required: true
                    forecastScore:
                      type: number
                      required: true
                    forecastUsages:
                      $ref: "#/components/schemas/WaterUsage"
                    referenceUsages:
                      $ref: "#/components/schemas/WaterUsage"

  /import/{dataType}:
    parameters:
      - name: dataType
        in: path
        required: true
        schema:
          default: communes
          type: string
          enum:
            - communes
            - counties
            - consumerTypes
            - usages
    put:
      summary: Import the sent file
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              required: data
              properties:
                data:
                  type: string
                  format: binary
      responses:
        201:
          description: The import was successful
        409:
          description: During the import a ForeignKey or Constraint was violated
